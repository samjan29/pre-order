plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.pre_order'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '21'
    }

    bootJar {
        archiveFileName = 'app.jar'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.1'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        runtimeOnly 'com.mysql:mysql-connector-j'

        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    def querydslDir = "$buildDir/generated/querydsl"

    sourceSets {
        main.java.srcDirs += [ querydslDir ]
    }

    tasks.withType(JavaCompile) {
        options.generatedSourceOutputDirectory = file(querydslDir)
    }

    clean.doLast {
        file(querydslDir).deleteDir()
    }
}